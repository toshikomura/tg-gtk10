Até o ano de 2005, a rederização de mapas em uma página web custava caro. Isso ocorria
devido ao fato que um mapa possui muitas informações, deste modo para apresentar um
mapa, era necessário fazer a transferência de uma grande quantidade de dados do servidor
para o cliente, e também custava caro fazer a transformação destes dados em um mapa no
browser do cliente.

Graças ao \emph{Google}, em Fevereiro de 2005, essa dor de cabeça foi aliviada com a criação
de uma nova solução de rederização, implementada na ferramenta \emph{Google Maps}. Esta nova
solução, consistia na divisão do mapa em pedaços. No caso, estes pedaços poderiam ser
requisitados um a um para formar uma parte ou um mapa completo. Com essa solução, foi possível
solucionar o problema da grande quantidade de dados transferidos, pois somente se transfere
as partes requisitadas do mapa, e também o problema da transformação, pois a quantidade de
dados para se transformar foi diminuida razoavelmente.

Muitas companias, percebendo a solução revolucionária adotada pelo \emph{Google} na
ferramenta \emph{Google Maps}, não ficaram atrás, adotando soluções sinilares que
também reduziam a carga de trabalho nos servidores. Entre estas ferramentas estão, o
\emph{Yahoo Maps} do \emph{Yahoo}, o \emph{Bing Maps} da \emph{Microsoft}, e o
\emph{Yandex Maps} do \emph{Yandex}.

Para os desenvolvedores, esta nova solução de rederização, tornou-se interessante
quando se analisou as operações que poderiam ser realizadas sobre os mapas. Por exemplo, nos mapas
do \emph{Google Maps}, podemos criar um mapa em uma página web, utilizar marcadores para
marcar locais ou regiões do mapa que consideramos importante, e até determinar caminhos
para ir de um local ao outro.

Por causa destas utilidades, vários programadores perceberam que a nova ferramenta do
\emph{Google} poderia ser muito útil em seus projeto, e por este motivo decidiram se mobilizar
na procura de uma forma de incorporar o \emph{Google Maps} em suas aplicações. O
\emph{Google}, percebendo essa mobilização, resolveu facilitar o acesso a ferramenta, divulgando
em Junho de 2005 uma \emph{API} (\emph{Application Programming Interface}) para o
\emph{Google Maps}, descrevendo nesta \emph{API}, detalhes de como importar e utilzar
as funções da ferramenta.

O \emph{Ruby On Rails} que é um \emph{framework} da linguagem \emph{Ruby}, possui
bibliotecas que simplificam o acesso da \emph{API} do \emph{Google Maps}. Basicamente estas
bibliotecas preparam internamente os objetos do mapa e depois mapeiam as funções da
ferramenta do \emph{Google}. Por exemplo, quando se esta utilizando uma destas bibliotecas,
ao tentar rederizar um mapa em uma página web, não é necessários saber quais os objetos do
\emph{Google Maps} precisam ser criados, pois estes objetos serão gerados automaticamente
na chamada da função de rederização de mapas da biblioteca.

O objetivo deste trabalho, é mostrar alguns conceitos básicos sobre bibliotecas, bem
como a criação do mesmo, apresentando um tutorial de como se pode criar e modificar
uma biblioteca do \emph{Ruby}.

O texto apresenta um passo-a-paaso da implementação de uma biblioteca simples e funcional
do \emph{Ruby}. Como exemplo, será desenvolvido um biblioteca que faz a tradução de
palavras do português para o inglês. E o texto também apresenta os passos básicos que
devem ser realizados para se adaptar uma biblioteca do \emph{Ruby}. Neste caso, será
feito a adição da funcionalidade de desenhar caminhos entre dois locais, utilizando uma
biblioteca do \emph{Ruby} que mapeia a \emph{API} do \emph{Google Maps}. 

Este trabalho esta organizado da seguinte maneira: história e conceitos de
bibliotecas no capítulo \ref{chapter:bibliotecas}, onde será
revisado a história das bibliotecas e explicado alguns conceitos básicos sobre elas,
bibliotecas do \emph{ruby} e segurança no capítulo \ref{chapter:bibliotecas_do_ruby_e_segurança},
onde será apresentado alguns conceitos das bibliotecas do \emph{Ruby}, criação de
bibliotecas do \emph{Ruby} no capítulo 
\ref{chapter:criacao_de_bibliotecas_do_ruby}, onde será apresentado
um tutorial de como criar uma bibliotecas do \emph{Ruby}, adaptação de
bibliotecas do \emph{Ruby} no capítulo 
\ref{chapter:adaptacao_de_bibliotecas_do_ruby}, onde será apresentado
um tutorial de como adaptar uma biblioteca do \emph{Ruby}, e a
conclusão no capítulo \ref{chapter:conclusao}.